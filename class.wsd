@startuml dashreader
package StatzAgg {
    interface StatzAgg {
        + PostEventStats(EventStats)
    }
    
}
package dashreader {
    class ChunkURL {
    }
    class ChunkURLChannel {
    }
    interface ReaderContext {
        + NextURL() (ChunkURL,error)
        + GetURLs() (ChunkURLChannel,error)
    }
    interface Reader {
        + Update(MPD)
        + MakeDASHReaderContext(ReaderContext, StreamSelector, RepresentationSelector) (ReaderContext, error)
    }
    class ReaderFactory {
    }
    class readerBaseContext { 
        + GetURLs() (ChunkURLChannel,error)      
    }
    class StreamSelector {
    }
    class StreamSelectorList {
        + NewStreamSelectorList(filename)
        + GetStream(contentType)
    }
    class RepresentationSelector {
    }
    class readerLiveMPDUpdate {
        + MakeDASHReaderContext(ReaderContext, uint, StringNoWhitespaceType) (ReaderContext, error)
    }
    ReaderContext ^-- readerBaseContext : Default
    readerBaseContext ^-- readerLiveMPDUpdateContext : For Live with MPD Update/SegTimeline
    Reader ^-- readerBase: Default
    readerBase ^-- readerBaseExtn : for MPD update handling
    readerBaseExtn ^-- readerLiveMPDUpdate : For Live with MPD Update/SegTimeline
    readerLiveMPDUpdate --> readerLiveMPDUpdateContext : Create/Update
    ReaderFactory --> readerLiveMPDUpdate : Create
    ReaderContext --> ChunkURLChannel : Create
    ReaderContext --> ChunkURL : Produce
    readerLiveMPDUpdateContext --> StatzAgg : Produce Events
    readerBaseContext --> StreamSelection : Filter Representations
    readerBaseContext --> RepresentationSelector : Select Representation
    MinBWRepresentationSelector ^-- RepresentationSelector : Opt for Min BW
    MaxBWRepresentationSelector ^-- RepresentationSelector : Opt for Min BW
}
package consumer {
    class client {
        + MPD
        + ReadMPD() 
    }
    class CustomRepresentationSelector{
    }
    client --> StreamSelectorList : 1. NewStreamSelectorList(filename)
    client --> ReaderFactory : 2. GetDASHReader(MPD)   
    client --> StreamSelectorList : 3. GetStream(contentType)    
    client --> Reader: 4,8. MakeDASHReaderContext(AdaptSet, StreamSelector, CustomRepresentationSelector)
    client --> ReaderContext : 5,9. GetURLs()
    client --> ChunkURLChannel : 6. Consume from Channel
    client --> Reader: 7. Update(MPD)
}
@enduml